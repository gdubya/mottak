---
parameters:
  - name: appName
    type: string

  - name: helmPackageArtifactName
    type: string

  - name: helmReleaseName
    type: string

  - name: clusterName
    type: string

  - name: azureResourceGroup
    type: string

  - name: namespace
    type: string

  - name: helmParameters
    type: string
    default: ''

  - name: helmVersion
    type: string
    default: '3.2.1'

steps:

  # Install Helm 3 on the agent (deploy machine)
  - task: HelmInstaller@1
    inputs:
      helmVersionToInstall: ${{ parameters.helmVersion }}

  # Get the artifact left by the build stage
  - download: current
    artifact: ${{ parameters.helmPackageArtifactName }}

  # Get the version number from the tag
  - bash: |
      VERSION_FROMTAG=$(echo $BUILD_SOURCEBRANCHNAME | sed -E 's/^v([0-9]+(\.[0-9]+)*)$/\1/')
      echo "##vso[task.setvariable variable=VersionFromTag]$VERSION_FROMTAG"

  # Deploy the helm chart to the Kubernetes cluster
  - task: HelmDeploy@0
    displayName: Deploy ${{ parameters.appName }} to the Cluster ${{ parameters.clusterName }} with Helm
    inputs:
      command: upgrade
      chartType: filepath
      chartPath: $(Pipeline.Workspace)/${{ parameters.helmPackageArtifactName }}/${{ parameters.appName }}-$(VersionFromTag).tgz
      chartName: ${{ parameters.appName }}
      releaseName: ${{ parameters.helmReleaseName }}
      install: true
      arguments: --force
      kubernetesCluster: ${{ parameters.clusterName }}
      azureSubscriptionEndpoint: 'pipeline'
      azureResourceGroup: ${{ parameters.azureResourceGroup }}
      namespace: ${{ parameters.namespace }}
      overrideValues: ${{ parameters.helmParameters }}
